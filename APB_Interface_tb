module APB_Interface_tb;

  reg Pwrite, Penable;
  reg [2:0] Pselx;
  reg [31:0] Pwdata, Paddr;
  wire Pwriteout, Penableout;
  wire [2:0] Pselxout;
  wire [31:0] Pwdataout, Paddrout;
  wire [31:0] Prdata;

  APB_Interface uut (
    .Pwrite(Pwrite),
    .Penable(Penable),
    .Pselx(Pselx),
    .Pwdata(Pwdata),
    .Paddr(Paddr),
    .Pwriteout(Pwriteout),
    .Penableout(Penableout),
    .Pselxout(Pselxout),
    .Pwdataout(Pwdataout),
    .Paddrout(Paddrout),
    .Prdata(Prdata)
  );

  initial begin
    Pwrite = 0;
    Penable = 0;
    Pselx = 3'b000;
    Pwdata = 32'h0;
    Paddr = 32'h0;

    #10;
    Pwrite = 1;              
    Penable = 1;             
    Pselx = 3'b001;          
    Paddr = 32'h8000_0001;   
    Pwdata = 32'h1234_5678;  
    #10;

    $display("Write operation:");
    $display("Pwriteout: %b, Penableout: %b, Pselxout: %b, Paddrout: %h, Pwdataout: %h", 
             Pwriteout, Penableout, Pselxout, Paddrout, Pwdataout);

    #10;
    Pwrite = 0;               
    Pselx = 3'b010;           
    Paddr = 32'h8000_0023;    
    Penable = 1;              
    #10;

    $display("Read operation:");
    $display("Pwriteout: %b, Penableout: %b, Pselxout: %b, Paddrout: %h, Prdata: %h", 
             Pwriteout, Penableout, Pselxout, Paddrout, Prdata);

    #10;
    Pwrite = 1;               // Set for write operation
    Pselx = 3'b011;           // Select slave 3
    Paddr = 32'h9000_0004;    // Set new address
    Pwdata = 32'h8765_4321;   // Write different data
    Penable = 1;              // Enable the transaction
    #10;

    $display("Second write operation:");
    $display("Pwriteout: %b, Penableout: %b, Pselxout: %b, Paddrout: %h, Pwdataout: %h", 
             Pwriteout, Penableout, Pselxout, Paddrout, Pwdataout);

    #10;
    Pwrite = 0;               // Set for read operation
    Pselx = 3'b100;           // Select a different slave
    Paddr = 32'hFFFF_FFFF;    // Invalid address (out of range)
    Penable = 1;              // Enable the transaction
    #10;

    $display("Invalid read operation:");
    $display("Pwriteout: %b, Penableout: %b, Pselxout: %b, Paddrout: %h, Prdata: %h", 
             Pwriteout, Penableout, Pselxout, Paddrout, Prdata);

    #10;
    $finish;
  end

endmodule

